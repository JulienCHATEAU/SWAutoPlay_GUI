# Testrunner job configuration file
mode: apk # apk | url | custom | freerunner
greenspector:
  application:
    name: MyApp # Your application's name
    version: "1.2.3" # Your application's version 
# job bloc, uncomment and edit the appropriate one according to your needs
#job: # job android apk
#  locationType: local # [local, web, package]
#  urls: # The web or local urls pointing to the APK(s) you want to test. If you have only one apk, you can set the string field "url" instead of the list "urls".
#    - /home/myUser/path/to/app.apk # Please be aware that only this APK will be launched and monitored.
#    - /home/myUser/path/to/app.apk
#  scenario: simple # [simple] check documentation for details
#  #authentication: # set this if your app have an authentication
#  #  actions:
#  #    - "text;coordinates;300;400;user@mail.com" #"text;id;session[username_or_email];user@mail.com" # email field
#  #    - "text;coordinates;300;500;userpassword" #"text;id;session[password];userpassword" # password field
#  #    - "click;coordinates;500;900" # "click;id;signupbutton" # login button
#  iterations: 1 # Number of iteration for each test case
#  networkMode: WIFI # [WIFI, 4G, 3G, 2G]. Please be aware, that your phone has to be able to handle the network mode
#  online: true # [true, false]
#  modules:
#    android_system_monitoring: true # Set this to true to enable collection of additional system metrics
#    hardware_probe: false
#    wakelock_probe: false
#
#job: # Custom job android apk
#  locationType: local # [local, web, package]
#  urls:
#    - /home/myUser/path/to/app.apk
#    - /home/myUser/path/to/app2.apk
#  testPackages:
#    - "com.greenspector.sample.UIAutomator" # The test package containing your Android Instrumentation Test Cases
#    - "com.greenspector.sample.Espresso" # The test package containing your Android Instrumentation Test Cases
#  monitoredPackages:
#    - com.android.chrome # The package to monitor, existing or newly installed
#  #extras:
#  #  annotation: com.greenspector.demo.test.MyAnnotation # add '-e annotation com.greenspector.demo.test.MyAnnotation' to your instrumentation
#  #  class: com.greenspector.demo.test.TestUIAutomator#launchMainActivity # add '-e class com.greenspector.demo.test.TestUIAutomator#launchMainActivity' to your instrumentation
#  iterations: 1 # Number of iteration for each test case
#  networkMode: WIFI # [WIFI, 4G, 3G, 2G]. Please be aware, that your phone has to be able to handle the network mode
#  #testTimeout: 30m0s # Timeout for the total duration of the test, default value is 30m, max value is 60m
#  online: true # [true, false]
#  modules:
#    hardware_probe: false
#    wakelock_probe: false
#
#job: # job android freerunner
#  monitoredPackages:
#    - com.android.chrome # The package to monitor, this package has to be installed on the device first
#  stepName: "Test Freerun" # Name of the step you are measuring. This name will appear in GREENSPECTOR web application
#  duration: 1m30s # The test duration (example: 1m30s or 90s)
#  online: true # automatically send results to Greenspector
#
#job: # job android url
#  url: http://www.greenspector.com/ # The url pointing to the Website you want to test
#  scenario: simple # [simple | avance] check documentation for details
#  iterations: 1 # Number of iteration for each test case
#  networkMode: WIFI # [WIFI, 4G, 3G, 2G]. Please be aware, that your phone has to be able to handle the network mode
#  browser: chrome # The web browser you want to measure on [chrome | firefox]
#  online: true # automatically send results to Greenspector
#  cache: false # Set this to true if you want the TestRunner to run a second test of your website with data in the browser cache
#  modules:
#    http_request: true # if you use this module, set phantomas path in config.yml
#    hardware_probe: false
#    wakelock_probe: false